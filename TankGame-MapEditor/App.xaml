<Application x:Class="TankGame_MapEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="MenuItem.Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#2D2D30" SnapsToDevicePixels="True" Padding="0,0,4,0">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" Height="16" Width="16" Margin="3" Content="{TemplateBinding Icon}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid x:Name="GlyphPanel" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3" Height="16" Width="16" FlowDirection="LeftToRight" Visibility="Collapsed">
                                    <Path x:Name="GlyphShape" HorizontalAlignment="Center" VerticalAlignment="Center" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" />
                                </Grid>
                                <ContentPresenter VerticalAlignment="Center" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                    <Border x:Name="SubMenuBorder" BorderBrush="#1D1D10" BorderThickness="1" Background="#2D2D30" Padding="2,4,2,4">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="#2D2D30" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                                </Canvas>
                                                <Rectangle Fill="#2D2D30" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1" />
                                                <ItemsPresenter Margin="2,0,2,2" VerticalAlignment="Center" x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsCheckable" Value="True">
                                <Setter Property="Visibility" TargetName="Icon" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="templateRoot" Value="#1D1D20" />
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070" />
                                <Setter Property="Fill" TargetName="GlyphShape" Value="#FF707070" />
                            </Trigger>
                            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#1D1D10" />
            <Setter Property="Background" Value="#2D2D30" />
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="#1D1D10" />
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="2,4,2,4">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Line}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <Style x:Key="WallRectangle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#80FF0000" />
            <Setter Property="Stroke" Value="Red" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem>
                            <MenuItem.Icon>
                                <TextBlock Width="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Padding="0" Width="50" Content="Type:" VerticalAlignment="Center" Foreground="White" />
                                    <ComboBox SelectedIndex="{Binding PlacementTarget.Tag.Type, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                              Width="100" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type Rectangle}" />
                                        </ComboBox.Resources>
                                        <ComboBoxItem>
                                            <TextBlock Text="Solid" />
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <TextBlock Text="Breakable" />
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <TextBlock Text="Ignore bullet" />
                                        </ComboBoxItem>
                                    </ComboBox>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Delete" Command="{Binding DeleteItem}" CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <TextBlock Text="&#xE74D;" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tag.Type, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource Mode=Self}}" Value="1">
                    <Setter Property="Fill" Value="#80FFFF00" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Tag.Type, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource Mode=Self}}" Value="2">
                    <Setter Property="Fill">
                        <Setter.Value>
                            <DrawingBrush TileMode="Tile" Viewport="0,0,6,6" ViewportUnits="Absolute">
                                <DrawingBrush.Drawing>
                                    <GeometryDrawing Brush="LightBlue" Geometry="M1,1 L0,1 0,2 1,2 1,1 2,1 2,0 1,0 Z" />
                                </DrawingBrush.Drawing>
                            </DrawingBrush>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlayerLocation" TargetType="{x:Type Ellipse}">
            <Setter Property="Fill" Value="{Binding Tag.PlayerColor, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, RelativeSource={RelativeSource Mode=Self}}" />
            <Setter Property="Stroke" Value="#AAAAFF" />
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="IsHitTestVisible" Value="True" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem>
                            <MenuItem.Icon>
                                <TextBlock Width="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Padding="0" Width="50" Content="Angle:" VerticalAlignment="Center" Foreground="White" />
                                    <TextBox Text="{Binding PlacementTarget.Tag.Angle, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                             Width="40" VerticalAlignment="Center" VerticalContentAlignment="Center" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem>
                            <MenuItem.Icon>
                                <TextBlock Width="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Label Padding="0" Width="50" Content="Player:" VerticalAlignment="Center" Foreground="White" />
                                    <ComboBox SelectedIndex="{Binding PlacementTarget.Tag.PlayerNumber, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                              Width="40" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type Rectangle}" />
                                        </ComboBox.Resources>
                                        <ComboBoxItem>
                                            <TextBlock Text="1" />
                                        </ComboBoxItem>
                                        <ComboBoxItem>
                                            <TextBlock Text="2" />
                                        </ComboBoxItem>
                                    </ComboBox>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Delete" Command="{Binding DeleteItem}" CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}">
                            <MenuItem.Icon>
                                <TextBlock Text="&#xE74D;" Width="16" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolboxButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=Self}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#A9AAAAFF" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>